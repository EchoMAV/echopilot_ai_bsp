!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ADC1_3V3_IN_CHANNEL	src/board_config.h	/^#define ADC1_3V3_IN_CHANNEL /;"	d
ADC1_6V6_IN_CHANNEL	src/board_config.h	/^#define ADC1_6V6_IN_CHANNEL /;"	d
ADC1_CH	src/board_config.h	/^#define ADC1_CH(/;"	d
ADC_BATTERY1_CURRENT_CHANNEL	src/board_config.h	/^#define ADC_BATTERY1_CURRENT_CHANNEL /;"	d
ADC_BATTERY1_VOLTAGE_CHANNEL	src/board_config.h	/^#define ADC_BATTERY1_VOLTAGE_CHANNEL /;"	d
ADC_BATTERY2_CURRENT_CHANNEL	src/board_config.h	/^#define ADC_BATTERY2_CURRENT_CHANNEL /;"	d
ADC_BATTERY2_VOLTAGE_CHANNEL	src/board_config.h	/^#define ADC_BATTERY2_VOLTAGE_CHANNEL /;"	d
ADC_CHANNELS	src/board_config.h	/^#define ADC_CHANNELS /;"	d
ADC_HW_REV_SENSE_CHANNEL	src/board_config.h	/^#define ADC_HW_REV_SENSE_CHANNEL /;"	d
ADC_HW_VER_SENSE_CHANNEL	src/board_config.h	/^#define ADC_HW_VER_SENSE_CHANNEL /;"	d
ADC_RSSI_IN_CHANNEL	src/board_config.h	/^#define ADC_RSSI_IN_CHANNEL /;"	d
ADC_SCALED_V5_CHANNEL	src/board_config.h	/^#define ADC_SCALED_V5_CHANNEL /;"	d
ADC_SCALED_VDD_3V3_SENSORS_CHANNEL	src/board_config.h	/^#define ADC_SCALED_VDD_3V3_SENSORS_CHANNEL /;"	d
APP_LOAD_ADDRESS	src/hw_config.h	/^#define APP_LOAD_ADDRESS /;"	d
APP_RESERVATION_SIZE	src/hw_config.h	/^#  define APP_RESERVATION_SIZE /;"	d
ARCH_SN_MAX_LENGTH	src/hw_config.h	/^# define ARCH_SN_MAX_LENGTH /;"	d
BOARD_ADC_BRICK1_VALID	src/board_config.h	/^#define BOARD_ADC_BRICK1_VALID /;"	d
BOARD_ADC_BRICK2_VALID	src/board_config.h	/^#define BOARD_ADC_BRICK2_VALID /;"	d
BOARD_ADC_HIPOWER_5V_OC	src/board_config.h	/^#define BOARD_ADC_HIPOWER_5V_OC /;"	d
BOARD_ADC_OPEN_CIRCUIT_V	src/board_config.h	/^#define BOARD_ADC_OPEN_CIRCUIT_V /;"	d
BOARD_ADC_PERIPH_5V_OC	src/board_config.h	/^#define BOARD_ADC_PERIPH_5V_OC /;"	d
BOARD_ADC_SERVO_VALID	src/board_config.h	/^#define BOARD_ADC_SERVO_VALID /;"	d
BOARD_ADC_USB_CONNECTED	src/board_config.h	/^#define BOARD_ADC_USB_CONNECTED /;"	d
BOARD_ADC_USB_VALID	src/board_config.h	/^#define BOARD_ADC_USB_VALID /;"	d
BOARD_ARMED_STATE_LED	src/board_config.h	/^#define BOARD_ARMED_STATE_LED /;"	d
BOARD_BATTERY1_A_PER_V	src/board_config.h	/^#define BOARD_BATTERY1_A_PER_V /;"	d
BOARD_BATTERY1_V_DIV	src/board_config.h	/^#define BOARD_BATTERY1_V_DIV /;"	d
BOARD_DMA_ALLOC_POOL_SIZE	src/board_config.h	/^#define BOARD_DMA_ALLOC_POOL_SIZE /;"	d
BOARD_DSHOT_MOTOR_ASSIGNMENT	src/board_config.h	/^#define BOARD_DSHOT_MOTOR_ASSIGNMENT /;"	d
BOARD_ENABLE_CONSOLE_BUFFER	src/board_config.h	/^#define BOARD_ENABLE_CONSOLE_BUFFER$/;"	d
BOARD_FIRST_FLASH_SECTOR_TO_ERASE	src/hw_config.h	/^#  define BOARD_FIRST_FLASH_SECTOR_TO_ERASE /;"	d
BOARD_FLASH_SECTORS	src/hw_config.h	/^#define BOARD_FLASH_SECTORS /;"	d
BOARD_FLASH_SIZE	src/hw_config.h	/^#define BOARD_FLASH_SIZE /;"	d
BOARD_FLASH_WAITSTATES	nuttx-config/include/board.h	/^#define BOARD_FLASH_WAITSTATES /;"	d
BOARD_HAS_CONTROL_STATUS_LEDS	src/board_config.h	/^#define BOARD_HAS_CONTROL_STATUS_LEDS /;"	d
BOARD_HAS_LTC44XX_VALIDS	src/board_config.h	/^#  define BOARD_HAS_LTC44XX_VALIDS /;"	d
BOARD_HAS_NBAT_I	src/board_config.h	/^#  define BOARD_HAS_NBAT_I /;"	d
BOARD_HAS_NBAT_V	src/board_config.h	/^#  define BOARD_HAS_NBAT_V /;"	d
BOARD_HAS_ON_RESET	src/board_config.h	/^#define BOARD_HAS_ON_RESET /;"	d
BOARD_HAS_STATIC_MANIFEST	src/board_config.h	/^#define BOARD_HAS_STATIC_MANIFEST /;"	d
BOARD_HAS_USB_VALID	src/board_config.h	/^#  define BOARD_HAS_USB_VALID /;"	d
BOARD_LED1	nuttx-config/include/board.h	/^#define BOARD_LED1 /;"	d
BOARD_LED1_BIT	nuttx-config/include/board.h	/^#define BOARD_LED1_BIT /;"	d
BOARD_LED2	nuttx-config/include/board.h	/^#define BOARD_LED2 /;"	d
BOARD_LED2_BIT	nuttx-config/include/board.h	/^#define BOARD_LED2_BIT /;"	d
BOARD_LED3	nuttx-config/include/board.h	/^#define BOARD_LED3 /;"	d
BOARD_LED3_BIT	nuttx-config/include/board.h	/^#define BOARD_LED3_BIT /;"	d
BOARD_LED_BLUE	nuttx-config/include/board.h	/^#define BOARD_LED_BLUE /;"	d
BOARD_LED_GREEN	nuttx-config/include/board.h	/^#define BOARD_LED_GREEN /;"	d
BOARD_LED_OFF	src/hw_config.h	/^#define BOARD_LED_OFF /;"	d
BOARD_LED_ON	src/hw_config.h	/^#define BOARD_LED_ON /;"	d
BOARD_LED_RED	nuttx-config/include/board.h	/^#define BOARD_LED_RED /;"	d
BOARD_NLEDS	nuttx-config/include/board.h	/^#define BOARD_NLEDS /;"	d
BOARD_NUMBER_BRICKS	src/board_config.h	/^#define BOARD_NUMBER_BRICKS /;"	d
BOARD_NUM_IO_TIMERS	src/board_config.h	/^#define BOARD_NUM_IO_TIMERS /;"	d
BOARD_OVERLOAD_LED	src/board_config.h	/^#define BOARD_OVERLOAD_LED /;"	d
BOARD_PIN_LED_ACTIVITY	src/hw_config.h	/^#define BOARD_PIN_LED_ACTIVITY /;"	d
BOARD_PIN_LED_BOOTLOADER	src/hw_config.h	/^#define BOARD_PIN_LED_BOOTLOADER /;"	d
BOARD_TYPE	src/hw_config.h	/^#define BOARD_TYPE /;"	d
BOARD_USES_PX4IO_VERSION	src/board_config.h	/^#define BOARD_USES_PX4IO_VERSION /;"	d
BOARD_VBUS	src/hw_config.h	/^#define BOARD_VBUS /;"	d
BOOTLOADER_DELAY	src/hw_config.h	/^#define BOOTLOADER_DELAY /;"	d
BOOT_DELAY_ADDRESS	src/hw_config.h	/^#define BOOT_DELAY_ADDRESS /;"	d
BOOT_DEVICES_FILTER_ONUSB	src/hw_config.h	/^#  define BOOT_DEVICES_FILTER_ONUSB /;"	d
BOOT_DEVICES_SELECTION	src/hw_config.h	/^#  define BOOT_DEVICES_SELECTION /;"	d
CAN_PORT	src/can.c	/^#  define CAN_PORT /;"	d	file:
DIRECT_PWM_OUTPUT_CHANNELS	src/board_config.h	/^#define DIRECT_PWM_OUTPUT_CHANNELS /;"	d
DMAMAP_SPI1_RX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_SPI1_RX /;"	d
DMAMAP_SPI1_TX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_SPI1_TX /;"	d
DMAMAP_SPI6_RX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_SPI6_RX /;"	d
DMAMAP_SPI6_TX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_SPI6_TX /;"	d
DMAMAP_UART8_RX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_UART8_RX /;"	d
DMAMAP_UART8_TX	nuttx-config/include/board_dma_map.h	/^#define DMAMAP_UART8_TX /;"	d
GPIO_BUZZER_1	src/board_config.h	/^#define GPIO_BUZZER_1 /;"	d
GPIO_CAN1_RX	nuttx-config/include/board.h	/^#define GPIO_CAN1_RX /;"	d
GPIO_CAN1_SILENT_S0	src/board_config.h	/^#define GPIO_CAN1_SILENT_S0 /;"	d
GPIO_CAN1_TX	nuttx-config/include/board.h	/^#define GPIO_CAN1_TX /;"	d
GPIO_CAN2_RX	nuttx-config/include/board.h	/^#define GPIO_CAN2_RX /;"	d
GPIO_CAN2_SILENT_S1	src/board_config.h	/^#define GPIO_CAN2_SILENT_S1 /;"	d
GPIO_CAN2_TX	nuttx-config/include/board.h	/^#define GPIO_CAN2_TX /;"	d
GPIO_HEATER_OUTPUT	src/board_config.h	/^#define GPIO_HEATER_OUTPUT /;"	d
GPIO_I2C1_SCL	nuttx-config/include/board.h	/^#define GPIO_I2C1_SCL /;"	d
GPIO_I2C1_SCL_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C1_SCL_GPIO /;"	d
GPIO_I2C1_SDA	nuttx-config/include/board.h	/^#define GPIO_I2C1_SDA /;"	d
GPIO_I2C1_SDA_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C1_SDA_GPIO /;"	d
GPIO_I2C2_SCL	nuttx-config/include/board.h	/^#define GPIO_I2C2_SCL /;"	d
GPIO_I2C2_SCL_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C2_SCL_GPIO /;"	d
GPIO_I2C2_SDA	nuttx-config/include/board.h	/^#define GPIO_I2C2_SDA /;"	d
GPIO_I2C2_SDA_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C2_SDA_GPIO /;"	d
GPIO_I2C3_SCL	nuttx-config/include/board.h	/^#define GPIO_I2C3_SCL /;"	d
GPIO_I2C3_SCL_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C3_SCL_GPIO /;"	d
GPIO_I2C3_SDA	nuttx-config/include/board.h	/^#define GPIO_I2C3_SDA /;"	d
GPIO_I2C3_SDA_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C3_SDA_GPIO /;"	d
GPIO_I2C4_SCL	nuttx-config/include/board.h	/^#define GPIO_I2C4_SCL /;"	d
GPIO_I2C4_SCL_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C4_SCL_GPIO /;"	d
GPIO_I2C4_SDA	nuttx-config/include/board.h	/^#define GPIO_I2C4_SDA /;"	d
GPIO_I2C4_SDA_GPIO	nuttx-config/include/board.h	/^#define GPIO_I2C4_SDA_GPIO /;"	d
GPIO_OTGFS_VBUS	src/board_config.h	/^#define GPIO_OTGFS_VBUS /;"	d
GPIO_PWM_IN	src/board_config.h	/^#define GPIO_PWM_IN /;"	d
GPIO_RSSI_IN	src/board_config.h	/^#define GPIO_RSSI_IN /;"	d
GPIO_SAFETY_SWITCH_IN	src/board_config.h	/^#define GPIO_SAFETY_SWITCH_IN /;"	d
GPIO_SPI1_MISO	nuttx-config/include/board.h	/^#define GPIO_SPI1_MISO /;"	d
GPIO_SPI1_MOSI	nuttx-config/include/board.h	/^#define GPIO_SPI1_MOSI /;"	d
GPIO_SPI1_SCK	nuttx-config/include/board.h	/^#define GPIO_SPI1_SCK /;"	d
GPIO_SPI2_MISO	nuttx-config/include/board.h	/^#define GPIO_SPI2_MISO /;"	d
GPIO_SPI2_MOSI	nuttx-config/include/board.h	/^#define GPIO_SPI2_MOSI /;"	d
GPIO_SPI2_SCK	nuttx-config/include/board.h	/^#define GPIO_SPI2_SCK /;"	d
GPIO_SPI4_MISO	nuttx-config/include/board.h	/^#define GPIO_SPI4_MISO /;"	d
GPIO_SPI4_MOSI	nuttx-config/include/board.h	/^#define GPIO_SPI4_MOSI /;"	d
GPIO_SPI4_SCK	nuttx-config/include/board.h	/^#define GPIO_SPI4_SCK /;"	d
GPIO_SPI5_MISO	nuttx-config/include/board.h	/^#define GPIO_SPI5_MISO /;"	d
GPIO_SPI5_MOSI	nuttx-config/include/board.h	/^#define GPIO_SPI5_MOSI /;"	d
GPIO_SPI5_SCK	nuttx-config/include/board.h	/^#define GPIO_SPI5_SCK /;"	d
GPIO_SPI6_MISO	nuttx-config/include/board.h	/^#define GPIO_SPI6_MISO /;"	d
GPIO_SPI6_MOSI	nuttx-config/include/board.h	/^#define GPIO_SPI6_MOSI /;"	d
GPIO_SPI6_SCK	nuttx-config/include/board.h	/^#define GPIO_SPI6_SCK /;"	d
GPIO_TONE_ALARM	src/board_config.h	/^#define GPIO_TONE_ALARM /;"	d
GPIO_TONE_ALARM_IDLE	src/board_config.h	/^#define GPIO_TONE_ALARM_IDLE /;"	d
GPIO_UART4_RX	nuttx-config/include/board.h	/^#define GPIO_UART4_RX /;"	d
GPIO_UART4_TX	nuttx-config/include/board.h	/^#define GPIO_UART4_TX /;"	d
GPIO_UART7_RX	nuttx-config/include/board.h	/^#define GPIO_UART7_RX /;"	d
GPIO_UART7_TX	nuttx-config/include/board.h	/^#define GPIO_UART7_TX /;"	d
GPIO_UART8_RX	nuttx-config/include/board.h	/^#define GPIO_UART8_RX /;"	d
GPIO_UART8_TX	nuttx-config/include/board.h	/^#define GPIO_UART8_TX /;"	d
GPIO_USART1_RX	nuttx-config/include/board.h	/^#define GPIO_USART1_RX /;"	d
GPIO_USART1_TX	nuttx-config/include/board.h	/^#define GPIO_USART1_TX /;"	d
GPIO_USART2_CTS	nuttx-config/include/board.h	/^#define GPIO_USART2_CTS /;"	d
GPIO_USART2_RTS	nuttx-config/include/board.h	/^#define GPIO_USART2_RTS /;"	d
GPIO_USART2_RX	nuttx-config/include/board.h	/^#define GPIO_USART2_RX /;"	d
GPIO_USART2_TX	nuttx-config/include/board.h	/^#define GPIO_USART2_TX /;"	d
GPIO_USART3_CTS	nuttx-config/include/board.h	/^#define GPIO_USART3_CTS /;"	d
GPIO_USART3_RTS	nuttx-config/include/board.h	/^#define GPIO_USART3_RTS /;"	d
GPIO_USART3_RX	nuttx-config/include/board.h	/^#define GPIO_USART3_RX /;"	d
GPIO_USART3_TX	nuttx-config/include/board.h	/^#define GPIO_USART3_TX /;"	d
GPIO_USART6_CTS	nuttx-config/include/board.h	/^#define GPIO_USART6_CTS /;"	d
GPIO_USART6_RTS	nuttx-config/include/board.h	/^#define GPIO_USART6_RTS /;"	d
GPIO_USART6_RX	nuttx-config/include/board.h	/^#define GPIO_USART6_RX /;"	d
GPIO_USART6_TX	nuttx-config/include/board.h	/^#define GPIO_USART6_TX /;"	d
GPIO_VDD_3V3_SD_CARD_EN	src/board_config.h	/^#define GPIO_VDD_3V3_SD_CARD_EN /;"	d
GPIO_VDD_3V3_SPEKTRUM_PASSIVE	src/board_config.h	/^#define GPIO_VDD_3V3_SPEKTRUM_PASSIVE /;"	d
GPIO_VDD_3V3_SPEKTRUM_POWER_EN	src/board_config.h	/^#define GPIO_VDD_3V3_SPEKTRUM_POWER_EN /;"	d
GPIO_VDD_5V_RC_EN	src/board_config.h	/^#define GPIO_VDD_5V_RC_EN /;"	d
GPIO_VDD_5V_WIFI_EN	src/board_config.h	/^#define GPIO_VDD_5V_WIFI_EN /;"	d
GPIO_nLED_BLUE	src/board_config.h	/^#define GPIO_nLED_BLUE /;"	d
GPIO_nLED_GREEN	src/board_config.h	/^#define GPIO_nLED_GREEN /;"	d
GPIO_nLED_RED	src/board_config.h	/^#define GPIO_nLED_RED /;"	d
GPIO_nPOWER_IN_A	src/board_config.h	/^#define GPIO_nPOWER_IN_A /;"	d
GPIO_nPOWER_IN_B	src/board_config.h	/^#define GPIO_nPOWER_IN_B /;"	d
GPIO_nPOWER_IN_C	src/board_config.h	/^#define GPIO_nPOWER_IN_C /;"	d
GPIO_nSAFETY_SWITCH_LED_OUT	src/board_config.h	/^#define GPIO_nSAFETY_SWITCH_LED_OUT /;"	d
GPIO_nVDD_5V_HIPOWER_EN	src/board_config.h	/^#define GPIO_nVDD_5V_HIPOWER_EN /;"	d
GPIO_nVDD_5V_HIPOWER_OC	src/board_config.h	/^#define GPIO_nVDD_5V_HIPOWER_OC /;"	d
GPIO_nVDD_5V_PERIPH_EN	src/board_config.h	/^#define GPIO_nVDD_5V_PERIPH_EN /;"	d
GPIO_nVDD_5V_PERIPH_OC	src/board_config.h	/^#define GPIO_nVDD_5V_PERIPH_OC /;"	d
GPIO_nVDD_BRICK1_VALID	src/board_config.h	/^#define GPIO_nVDD_BRICK1_VALID /;"	d
GPIO_nVDD_BRICK2_VALID	src/board_config.h	/^#define GPIO_nVDD_BRICK2_VALID /;"	d
GPIO_nVDD_USB_VALID	src/board_config.h	/^#define GPIO_nVDD_USB_VALID /;"	d
HAVE_NCD	src/sdio.c	/^#define HAVE_NCD /;"	d	file:
HEATER_OUTPUT_EN	src/board_config.h	/^#define HEATER_OUTPUT_EN(/;"	d
HRT_TIMER	src/board_config.h	/^#define HRT_TIMER /;"	d
HRT_TIMER_CHANNEL	src/board_config.h	/^#define HRT_TIMER_CHANNEL /;"	d
HW_CONFIG_H_	src/hw_config.h	/^#define HW_CONFIG_H_$/;"	d
INTERFACE_USART	src/hw_config.h	/^#define INTERFACE_USART /;"	d
INTERFACE_USART_CONFIG	src/hw_config.h	/^#define INTERFACE_USART_CONFIG /;"	d
INTERFACE_USB	src/hw_config.h	/^#define INTERFACE_USB /;"	d
INTERFACE_USB_CONFIG	src/hw_config.h	/^#define INTERFACE_USB_CONFIG /;"	d
LED_ASSERTION	nuttx-config/include/board.h	/^#define LED_ASSERTION /;"	d
LED_HEAPALLOCATE	nuttx-config/include/board.h	/^#define LED_HEAPALLOCATE /;"	d
LED_IDLE	nuttx-config/include/board.h	/^#define LED_IDLE /;"	d
LED_INIRQ	nuttx-config/include/board.h	/^#define LED_INIRQ /;"	d
LED_IRQSENABLED	nuttx-config/include/board.h	/^#define LED_IRQSENABLED /;"	d
LED_PANIC	nuttx-config/include/board.h	/^#define LED_PANIC /;"	d
LED_SIGNAL	nuttx-config/include/board.h	/^#define LED_SIGNAL /;"	d
LED_STACKCREATED	nuttx-config/include/board.h	/^#define LED_STACKCREATED /;"	d
LED_STARTED	nuttx-config/include/board.h	/^#define LED_STARTED /;"	d
OSC_FREQ	src/hw_config.h	/^#define OSC_FREQ /;"	d
PROBE	nuttx-config/include/board.h	/^# define PROBE(/;"	d
PROBE_1	nuttx-config/include/board.h	/^# define PROBE_1 /;"	d
PROBE_10	nuttx-config/include/board.h	/^# define PROBE_10 /;"	d
PROBE_11	nuttx-config/include/board.h	/^# define PROBE_11 /;"	d
PROBE_2	nuttx-config/include/board.h	/^# define PROBE_2 /;"	d
PROBE_3	nuttx-config/include/board.h	/^# define PROBE_3 /;"	d
PROBE_4	nuttx-config/include/board.h	/^# define PROBE_4 /;"	d
PROBE_5	nuttx-config/include/board.h	/^# define PROBE_5 /;"	d
PROBE_6	nuttx-config/include/board.h	/^# define PROBE_6 /;"	d
PROBE_7	nuttx-config/include/board.h	/^# define PROBE_7 /;"	d
PROBE_8	nuttx-config/include/board.h	/^# define PROBE_8 /;"	d
PROBE_9	nuttx-config/include/board.h	/^# define PROBE_9 /;"	d
PROBE_INIT	nuttx-config/include/board.h	/^# define PROBE_INIT(/;"	d
PROBE_MARK	nuttx-config/include/board.h	/^# define PROBE_MARK(/;"	d
PROBE_N	nuttx-config/include/board.h	/^# define PROBE_N(/;"	d
PWMIN_TIMER	src/board_config.h	/^#define PWMIN_TIMER /;"	d
PWMIN_TIMER_CHANNEL	src/board_config.h	/^#define PWMIN_TIMER_CHANNEL /;"	d
PX4IO_SERIAL_BASE	src/board_config.h	/^#define PX4IO_SERIAL_BASE /;"	d
PX4IO_SERIAL_BITRATE	src/board_config.h	/^#define PX4IO_SERIAL_BITRATE /;"	d
PX4IO_SERIAL_CLOCK	src/board_config.h	/^#define PX4IO_SERIAL_CLOCK /;"	d
PX4IO_SERIAL_DEVICE	src/board_config.h	/^#define PX4IO_SERIAL_DEVICE /;"	d
PX4IO_SERIAL_RCC_EN	src/board_config.h	/^#define PX4IO_SERIAL_RCC_EN /;"	d
PX4IO_SERIAL_RCC_REG	src/board_config.h	/^#define PX4IO_SERIAL_RCC_REG /;"	d
PX4IO_SERIAL_RX_DMAMAP	src/board_config.h	/^#define PX4IO_SERIAL_RX_DMAMAP /;"	d
PX4IO_SERIAL_RX_GPIO	src/board_config.h	/^#define PX4IO_SERIAL_RX_GPIO /;"	d
PX4IO_SERIAL_TX_DMAMAP	src/board_config.h	/^#define PX4IO_SERIAL_TX_DMAMAP /;"	d
PX4IO_SERIAL_TX_GPIO	src/board_config.h	/^#define PX4IO_SERIAL_TX_GPIO /;"	d
PX4IO_SERIAL_VECTOR	src/board_config.h	/^#define PX4IO_SERIAL_VECTOR /;"	d
PX4_ADC_GPIO	src/board_config.h	/^#define PX4_ADC_GPIO /;"	d
PX4_GPIO_INIT_LIST	src/board_config.h	/^#define PX4_GPIO_INIT_LIST /;"	d
READ_VDD_3V3_SPEKTRUM_POWER_EN	src/board_config.h	/^#define READ_VDD_3V3_SPEKTRUM_POWER_EN(/;"	d
SDIO_MINOR	src/board_config.h	/^#define SDIO_MINOR /;"	d
SDIO_SLOTNO	src/board_config.h	/^#define SDIO_SLOTNO /;"	d
SDMMC_PIN_OFF	src/board_config.h	/^#define SDMMC_PIN_OFF(/;"	d
SERIAL0_DEV	src/hw_config.h	/^#define SERIAL0_DEV /;"	d
SERIAL1_DEV	src/hw_config.h	/^#define SERIAL1_DEV /;"	d
SERIAL_BREAK_DETECT_DISABLED	src/hw_config.h	/^#define SERIAL_BREAK_DETECT_DISABLED /;"	d
SPEKTRUM_POWER	src/board_config.h	/^#define SPEKTRUM_POWER(/;"	d
STM32_ACLK_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_ACLK_FREQUENCY /;"	d
STM32_APB1_TIM12_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM12_CLKIN /;"	d
STM32_APB1_TIM13_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM13_CLKIN /;"	d
STM32_APB1_TIM14_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM14_CLKIN /;"	d
STM32_APB1_TIM2_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM2_CLKIN /;"	d
STM32_APB1_TIM3_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM3_CLKIN /;"	d
STM32_APB1_TIM4_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM4_CLKIN /;"	d
STM32_APB1_TIM5_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM5_CLKIN /;"	d
STM32_APB1_TIM6_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM6_CLKIN /;"	d
STM32_APB1_TIM7_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB1_TIM7_CLKIN /;"	d
STM32_APB2_TIM15_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB2_TIM15_CLKIN /;"	d
STM32_APB2_TIM16_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB2_TIM16_CLKIN /;"	d
STM32_APB2_TIM17_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB2_TIM17_CLKIN /;"	d
STM32_APB2_TIM1_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB2_TIM1_CLKIN /;"	d
STM32_APB2_TIM8_CLKIN	nuttx-config/include/board.h	/^#define STM32_APB2_TIM8_CLKIN /;"	d
STM32_BOARD_HCLK	nuttx-config/include/board.h	/^#define STM32_BOARD_HCLK /;"	d
STM32_BOARD_USEHSE	nuttx-config/include/board.h	/^#define STM32_BOARD_USEHSE$/;"	d
STM32_BOARD_XTAL	nuttx-config/include/board.h	/^#define STM32_BOARD_XTAL /;"	d
STM32_CPUCLK_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_CPUCLK_FREQUENCY /;"	d
STM32_FDCANCLK	nuttx-config/include/board.h	/^#define STM32_FDCANCLK /;"	d
STM32_HCLK_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_HCLK_FREQUENCY /;"	d
STM32_HSE_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_HSE_FREQUENCY /;"	d
STM32_HSI_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_HSI_FREQUENCY /;"	d
STM32_LSE_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_LSE_FREQUENCY /;"	d
STM32_LSI_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_LSI_FREQUENCY /;"	d
STM32_PCLK1_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PCLK1_FREQUENCY /;"	d
STM32_PCLK2_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PCLK2_FREQUENCY /;"	d
STM32_PCLK3_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PCLK3_FREQUENCY /;"	d
STM32_PCLK4_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PCLK4_FREQUENCY /;"	d
STM32_PLL1P_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL1P_FREQUENCY /;"	d
STM32_PLL1Q_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL1Q_FREQUENCY /;"	d
STM32_PLL1R_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL1R_FREQUENCY /;"	d
STM32_PLL2P_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL2P_FREQUENCY /;"	d
STM32_PLL2Q_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL2Q_FREQUENCY /;"	d
STM32_PLL2R_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL2R_FREQUENCY /;"	d
STM32_PLL3P_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL3P_FREQUENCY /;"	d
STM32_PLL3Q_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL3Q_FREQUENCY /;"	d
STM32_PLL3R_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_PLL3R_FREQUENCY /;"	d
STM32_PLLCFG_PLL1CFG	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1CFG /;"	d
STM32_PLLCFG_PLL1M	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1M /;"	d
STM32_PLLCFG_PLL1N	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1N /;"	d
STM32_PLLCFG_PLL1P	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1P /;"	d
STM32_PLLCFG_PLL1Q	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1Q /;"	d
STM32_PLLCFG_PLL1R	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL1R /;"	d
STM32_PLLCFG_PLL2CFG	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2CFG /;"	d
STM32_PLLCFG_PLL2M	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2M /;"	d
STM32_PLLCFG_PLL2N	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2N /;"	d
STM32_PLLCFG_PLL2P	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2P /;"	d
STM32_PLLCFG_PLL2Q	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2Q /;"	d
STM32_PLLCFG_PLL2R	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL2R /;"	d
STM32_PLLCFG_PLL3CFG	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3CFG /;"	d
STM32_PLLCFG_PLL3M	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3M /;"	d
STM32_PLLCFG_PLL3N	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3N /;"	d
STM32_PLLCFG_PLL3P	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3P /;"	d
STM32_PLLCFG_PLL3Q	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3Q /;"	d
STM32_PLLCFG_PLL3R	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLL3R /;"	d
STM32_PLLCFG_PLLSRC	nuttx-config/include/board.h	/^#define STM32_PLLCFG_PLLSRC /;"	d
STM32_RCC_D1CFGR_D1CPRE	nuttx-config/include/board.h	/^#define STM32_RCC_D1CFGR_D1CPRE /;"	d
STM32_RCC_D1CFGR_D1PPRE	nuttx-config/include/board.h	/^#define STM32_RCC_D1CFGR_D1PPRE /;"	d
STM32_RCC_D1CFGR_HPRE	nuttx-config/include/board.h	/^#define STM32_RCC_D1CFGR_HPRE /;"	d
STM32_RCC_D2CCIP1R_FDCANSEL	nuttx-config/include/board.h	/^#define STM32_RCC_D2CCIP1R_FDCANSEL /;"	d
STM32_RCC_D2CCIP1R_SPI123SRC	nuttx-config/include/board.h	/^#define STM32_RCC_D2CCIP1R_SPI123SRC /;"	d
STM32_RCC_D2CCIP1R_SPI45SRC	nuttx-config/include/board.h	/^#define STM32_RCC_D2CCIP1R_SPI45SRC /;"	d
STM32_RCC_D2CCIP2R_I2C123SRC	nuttx-config/include/board.h	/^#define STM32_RCC_D2CCIP2R_I2C123SRC /;"	d
STM32_RCC_D2CCIP2R_USBSRC	nuttx-config/include/board.h	/^#define STM32_RCC_D2CCIP2R_USBSRC /;"	d
STM32_RCC_D2CFGR_D2PPRE1	nuttx-config/include/board.h	/^#define STM32_RCC_D2CFGR_D2PPRE1 /;"	d
STM32_RCC_D2CFGR_D2PPRE2	nuttx-config/include/board.h	/^#define STM32_RCC_D2CFGR_D2PPRE2 /;"	d
STM32_RCC_D3CCIPR_ADCSEL	nuttx-config/include/board.h	/^#define STM32_RCC_D3CCIPR_ADCSEL /;"	d
STM32_RCC_D3CCIPR_I2C4SRC	nuttx-config/include/board.h	/^#define STM32_RCC_D3CCIPR_I2C4SRC /;"	d
STM32_RCC_D3CCIPR_SPI6SRC	nuttx-config/include/board.h	/^#define STM32_RCC_D3CCIPR_SPI6SRC /;"	d
STM32_RCC_D3CFGR_D3PPRE	nuttx-config/include/board.h	/^#define STM32_RCC_D3CFGR_D3PPRE /;"	d
STM32_SDMMC_CLKCR_EDGE	nuttx-config/include/board.h	/^#define STM32_SDMMC_CLKCR_EDGE /;"	d
STM32_SDMMC_INIT_CLKDIV	nuttx-config/include/board.h	/^#define STM32_SDMMC_INIT_CLKDIV /;"	d
STM32_SDMMC_MMCXFR_CLKDIV	nuttx-config/include/board.h	/^#  define STM32_SDMMC_MMCXFR_CLKDIV /;"	d
STM32_SDMMC_SDXFR_CLKDIV	nuttx-config/include/board.h	/^#  define STM32_SDMMC_SDXFR_CLKDIV /;"	d
STM32_SYSCLK_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_SYSCLK_FREQUENCY /;"	d
STM32_VCO1_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_VCO1_FREQUENCY /;"	d
STM32_VCO2_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_VCO2_FREQUENCY /;"	d
STM32_VCO3_FREQUENCY	nuttx-config/include/board.h	/^#define STM32_VCO3_FREQUENCY /;"	d
TONE_ALARM_CHANNEL	src/board_config.h	/^#define TONE_ALARM_CHANNEL /;"	d
TONE_ALARM_TIMER	src/board_config.h	/^#define TONE_ALARM_TIMER /;"	d
USB0_DEV	src/hw_config.h	/^#define USB0_DEV /;"	d
USB_DATA_ALIGN	src/hw_config.h	/^# define USB_DATA_ALIGN$/;"	d
VDD_3V3_SD_CARD_EN	src/board_config.h	/^#define VDD_3V3_SD_CARD_EN(/;"	d
VDD_3V3_SPEKTRUM_POWER_EN	src/board_config.h	/^#define VDD_3V3_SPEKTRUM_POWER_EN(/;"	d
VDD_5V_HIPOWER_EN	src/board_config.h	/^#define VDD_5V_HIPOWER_EN(/;"	d
VDD_5V_PERIPH_EN	src/board_config.h	/^#define VDD_5V_PERIPH_EN(/;"	d
VDD_5V_RC_EN	src/board_config.h	/^#define VDD_5V_RC_EN(/;"	d
VDD_5V_WIFI_EN	src/board_config.h	/^#define VDD_5V_WIFI_EN(/;"	d
_FLASH_KBYTES	src/hw_config.h	/^#define _FLASH_KBYTES /;"	d
__NUTTX_CONFIG_ECHOMAV_ECHOPILOT_AI_INCLUDE_BOARD_H	nuttx-config/include/board.h	/^#define __NUTTX_CONFIG_ECHOMAV_ECHOPILOT_AI_INCLUDE_BOARD_H$/;"	d
board_app_initialize	src/bootloader_main.c	/^__EXPORT int board_app_initialize(uintptr_t arg)$/;"	f	typeref:typename:__EXPORT int
board_app_initialize	src/init.c	/^__EXPORT int board_app_initialize(uintptr_t arg)$/;"	f	typeref:typename:__EXPORT int
board_autoled_initialize	src/led.c	/^void board_autoled_initialize(void)$/;"	f	typeref:typename:void
board_autoled_off	src/led.c	/^void board_autoled_off(int led)$/;"	f	typeref:typename:void
board_autoled_on	src/led.c	/^void board_autoled_on(int led)$/;"	f	typeref:typename:void
board_late_initialize	src/bootloader_main.c	/^void board_late_initialize(void)$/;"	f	typeref:typename:void
board_on_reset	src/bootloader_main.c	/^__EXPORT void board_on_reset(int status) {}$/;"	f	typeref:typename:__EXPORT void
board_on_reset	src/init.c	/^__EXPORT void board_on_reset(int status)$/;"	f	typeref:typename:__EXPORT void
board_peripheral_reset	src/init.c	/^__EXPORT void board_peripheral_reset(int ms)$/;"	f	typeref:typename:__END_DECLS __EXPORT void
board_timerhook	src/bootloader_main.c	/^void board_timerhook(void)$/;"	f	typeref:typename:void
can_devinit	src/can.c	/^int can_devinit(void)$/;"	f	typeref:typename:int
g_ledmap	src/led.c	/^static uint32_t g_ledmap[] = {$/;"	v	typeref:typename:uint32_t[]	file:
g_sd_inserted	src/sdio.c	/^static bool g_sd_inserted = 0xff; \/* Impossible value *\/$/;"	v	typeref:typename:bool	file:
io_timers	src/timer_config.cpp	/^constexpr io_timers_t io_timers[MAX_IO_TIMERS] = {$/;"	v	typeref:typename:io_timers_t[]
io_timers_channel_mapping	src/timer_config.cpp	/^constexpr io_timers_channel_mapping_t io_timers_channel_mapping =$/;"	v	typeref:typename:io_timers_channel_mapping_t
led_init	src/led.c	/^__EXPORT void led_init(void)$/;"	f	typeref:typename:__EXPORT void
led_off	src/led.c	/^__EXPORT void led_off(int led)$/;"	f	typeref:typename:__EXPORT void
led_on	src/led.c	/^__EXPORT void led_on(int led)$/;"	f	typeref:typename:__EXPORT void
led_toggle	src/led.c	/^__EXPORT void led_toggle(int led)$/;"	f	typeref:typename:__EXPORT void
nuttx_owns_leds	src/led.c	/^static bool nuttx_owns_leds = true;$/;"	v	typeref:typename:__END_DECLS bool	file:
phy_get_led	src/led.c	/^static bool phy_get_led(int led)$/;"	f	typeref:typename:bool	file:
phy_set_led	src/led.c	/^static void phy_set_led(int led, bool state)$/;"	f	typeref:typename:void	file:
px4_i2c_buses	src/i2c.cpp	/^constexpr px4_i2c_bus_t px4_i2c_buses[I2C_BUS_MAX_BUS_ITEMS] = {$/;"	v	typeref:typename:px4_i2c_bus_t[]
px4_spi_buses	src/spi.cpp	/^constexpr px4_spi_bus_t px4_spi_buses[SPI_BUS_MAX_BUS_ITEMS] = {$/;"	v	typeref:typename:px4_spi_bus_t[]
sdio_dev	src/sdio.c	/^static FAR struct sdio_dev_s *sdio_dev;$/;"	v	typeref:struct:sdio_dev_s *	file:
stm32_boardinitialize	src/bootloader_main.c	/^__EXPORT void stm32_boardinitialize(void)$/;"	f	typeref:typename:__EXPORT void
stm32_boardinitialize	src/init.c	/^stm32_boardinitialize(void)$/;"	f	typeref:typename:__EXPORT void
stm32_ncd_interrupt	src/sdio.c	/^static int stm32_ncd_interrupt(int irq, FAR void *context)$/;"	f	typeref:typename:int	file:
stm32_sdio_initialize	src/sdio.c	/^int stm32_sdio_initialize(void)$/;"	f	typeref:typename:int
stm32_usbinitialize	src/usb.c	/^__EXPORT void stm32_usbinitialize(void)$/;"	f	typeref:typename:__EXPORT void
stm32_usbsuspend	src/usb.c	/^__EXPORT void stm32_usbsuspend(FAR struct usbdev_s *dev, bool resume)$/;"	f	typeref:typename:__EXPORT void
timer_io_channels	src/timer_config.cpp	/^constexpr timer_io_channels_t timer_io_channels[MAX_TIMER_IO_CHANNELS] = {$/;"	v	typeref:typename:timer_io_channels_t[]
unused	src/spi.cpp	/^static constexpr bool unused = validateSPIConfig(px4_spi_buses);$/;"	v	typeref:typename:bool	file:
xlat	src/led.c	/^#  define xlat(/;"	d	file:
xlatpx4	src/led.c	/^static const uint8_t xlatpx4[] = {1, 2, 4, 0};$/;"	v	typeref:typename:const uint8_t[]	file:
